# Defines the name of the Spring Boot application. This name can be used for various purposes,
# such as logging, monitoring, and service discovery.
spring.application.name=devApp-ms

# This line is a commented-out example of how to run the JAR file for this application.
# It serves as a reminder for deployment or execution.
#java -jar E:\Code\JAVA_Code\msApp\devApp-ms\build\libs\devApp-ms-0.0.1-
#  SNAPSHOT.jar --> run jar file

# These lines list the available logging levels.
# You can set the logging level for different parts of your application to control
# the verbosity of the logs.
#trace: Most detailed information, including all messages.
#debug: Detailed information, useful for debugging an application.
#info: Informational messages that highlight the progress of the application at a coarse-grained level.
#warning: Potentially harmful situations.
#error: Error events that might still allow the application to continue running.
#off: No logging output.

# Sets the logging level for all classes within the 'org.springframework' package to DEBUG.
# This is useful for getting detailed insights into the Spring framework's internal workings.
logging.level.org.springframework=debug

# This line is commented out, but if uncommented, it would set the active Spring profile to 'production'.
# Profiles allow you to have different configurations for different environments (e.g., development, production).
#spring.profiles.active=production

# Defines the base URL for the 'currency-service'. This is an example of an external service
# that this application might interact with. In a development environment, this might point
# to a local or development instance of the currency service.
currency-service.url=http://dev.mbarekDev.com

# Specifies the username for authenticating with the 'currency-service' in the development environment.
currency-service.username=dev.username

# Specifies the API key for authenticating with the 'currency-service' in the development environment.
currency-service.key=devkey

# Configures Spring Boot Actuator to expose all available web endpoints.
# Actuator provides production-ready features like monitoring and management.
# Setting this to '*' makes all endpoints (e.g., /health, /info, /beans, /env) accessible via HTTP.
# In production, it's recommended to expose only necessary endpoints for security reasons.
#management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.include=health, metrics
